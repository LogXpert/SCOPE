[SNAPSHOT]
snapshot_interval_minutes = 10
compress_state = True

[MASKING]
masking1 = [
          {"regex_pattern": "(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s+(\\d{1,2})\\s+(\\d{1,2}:\\d{1,2}:\\d{1,2})(?:\\s+[A-Z]+)?\\s+(\\d{4})",  "mask_with": "DATE"},
          {"regex_pattern": "(?<=\\s)[A-Z]\\d{2}(?=\\s)", "mask_with": "SLOT"},
          {"regex_pattern": "(<\\*>)(?:\\s+<\\*>)+", "mask_with": "*"},
          #{"regex_pattern": "([\\w-]+\\.){2,}[\\w-]+", "mask_with": "URL"},
          {"regex_pattern": "((?<=[^A-Za-z0-9])|^)(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})((?=[^A-Za-z0-9])|$)", "mask_with": "IPV6"},
          {"regex_pattern": "([\\w-]+\\.){2,}(com|net|org|cn|io|edu)(:\\d{1,5})?", "mask_with": "DOMAIN"},
          {"regex_pattern": "(?:(?:https?|hdfs|ftp)://)?[\\w.-]+:\\d{1,5}(?=[\\s;.,\\])}]|$)", "mask_with": "PORT"},
          {"regex_pattern": "(://|//|\\.?/)[^\\s)]+(?:/[^\\s)]*)*+/?(?<!:)(\\?[^\\s)]*)?", "mask_with": "PATH"},
          {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(([0-9a-fA-F]{2,}:){3,}([0-9a-fA-F]{2,}))((?=[^A-Za-z0-9])|$)", "mask_with": "UUID"},
          {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})((?=[^A-Za-z0-9])|$)", "mask_with": "IP"},
          #{"regex_pattern": "\\b(HTTPS|SOCKS5|IPV4|IPV6)\\b", "mask_with": "<PROTOCL>"},
          #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9a-f]{6,} ?){3,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
          #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9A-F]{4} ?){4,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
          #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)(?:0x|0X)[a-fA-F0-9]{1,}|(?<![a-zA-Z0-9])[a-fA-F0-9]{5,}((?=[^A-Za-z0-9])|$)", "mask_with": "HEX"},
          {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(?:0[X]([A-F0-9]+)|0[x]([a-f0-9]+))((?=[^A-Za-z0-9])|$)|((?<=[^A-Za-z0-9])|^)([A-F0-9]{6,})((?=[^A-Za-z0-9])|$)|((?<=[^A-Za-z0-9])|^)([a-f0-9]{6,})((?=[^A-Za-z0-9])|$)", "mask_with": "HEX"},
          {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([\\-\\+]?\\d+)((?=[^A-Za-z0-9])|$)", "mask_with": "NUM"},
          {"regex_pattern": "(?<![A-Za-z0-9])((B|KB|MB|GB|sec|secs|kbps))(?![A-Za-z0-9])", "mask_with": "UNIT"},
          {"regex_pattern":"(?<=executed cmd )(\".+?\")", "mask_with": "CMD"}
          ]

masking = [
          {"regex_pattern": "(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s+(\\d{1,2})\\s+(\\d{1,2}:\\d{1,2}:\\d{1,2})(?:\\s+[A-Z]+)?\\s+(\\d{4})",  "mask_with": "*"},
          {"regex_pattern": "(?<=\\s)[A-Z]\\d{2}(?=\\s)", "mask_with": "*"},
          {"regex_pattern": "(<\\*>)(?:\\s+<\\*>)+", "mask_with": "*"},
          {"regex_pattern": "((?<=[^A-Za-z0-9])|^)(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4})((?=[^A-Za-z0-9])|$)", "mask_with": "*"},
          {"regex_pattern": "([\\w-]+\\.){2,}(com|net|org|cn|io|edu)(:\\d{1,5})?", "mask_with": "*"},
          {"regex_pattern": "(?:(?:https?|hdfs|ftp|tcp)://)?[\\w.-]+:\\d{1,5}(?=[\\s:;.,\\])}]|$)", "mask_with": "*"},
          {"regex_pattern": "(://|//|\\.?/)[^\\s)]+(?:/[^\\s)]*)*+/?(?<!:)(\\?[^\\s)]*)?", "mask_with": "*"},
          {"regex_pattern": "((?<=[^A-Za-z0-9])|^)(([0-9a-fA-F]{2,}:){3,}([0-9a-fA-F]{2,}))((?=[^A-Za-z0-9])|$)", "mask_with": "*"},
          {"regex_pattern": "((?<=[^A-Za-z0-9])|^)(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})((?=[^A-Za-z0-9])|$)", "mask_with": "*"},
          #{"regex_pattern": "\\b(HTTPS|SOCKS5|IPV4|IPV6)\\b", "mask_with": "<PROTOCL>"},
          #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9a-f]{6,} ?){3,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
          #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9A-F]{4} ?){4,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
          {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(?:0[X]([A-F0-9]+)|0[x]([a-f0-9]+))((?=[^A-Za-z0-9])|$)|((?<=[^A-Za-z0-9])|^)([A-F0-9]{6,})((?=[^A-Za-z0-9])|$)|((?<=[^A-Za-z0-9])|^)([a-f0-9]{6,})((?=[^A-Za-z0-9])|$)", "mask_with": "*"},
          {"regex_pattern": "((?<=[^A-Za-z0-9])|^)([\\-\\+]?\\d+)((?=[^A-Za-z0-9])|$)", "mask_with": "*"},
          {"regex_pattern": "(?<![A-Za-z0-9])((B|KB|MB|GB|sec|secs|kbps))(?![A-Za-z0-9])", "mask_with": "*"},
          {"regex_pattern": "(?<=executed cmd )(\".+?\")", "mask_with": "*"}
          ]

mask_prefix = <
mask_suffix = >

[DRAIN]
# engine is Optional parameter. Engine will be "Drain" if the engine argument is not specified.
# engine has two options: 'Drain' and 'JaccardDrain'.
engine = Tools

#0.0 means dynamic setting according to log length
sim_th = 0.0

depth = 500
max_children = 1000
max_clusters = 102400
#extra_delimiters = ['_']
parametrize_numeric_tokens = False

# False: single tree, True: bi-tree
#bi_tree_support = False
bi_tree_support = True

# True/False: Template Pool Support is used or not
#pool_support = False
pool_support = True

# True/False: Small Language Model is used or not
POS_support = False
#POS_support = True

# True/False: Large Language Model is used or not
#LLM_support = False
LLM_support = True

# LLM provider, e.g., OpenAI, ModelScope, etc.
LLM_provider = https://api-inference.modelscope.cn/v1/
#LLM_provider = https://api.siliconflow.cn/v1/
#LLM_provider = https://api.openai-proxy.org/v1
#LLM_model = Qwen/Qwen3-235B-A22B
LLM_model = Qwen/Qwen3-32B
#LLM_model = Qwen/Qwen3-8B
#LLM_model = gpt-4o
LLM_api_Key = "af9a320d-c2c2-4832-86de-769bf7ab4d28"
#LLM_api_Key = sk-fgaqzbeiljqofpedgjdvbfbnqltplgbkprmjrmaccaygjaak

LLM_thinking = False
#LLM_thinking = True

#MODELSCOPE_SDK_TOKEN = "1af9a320d-c2c2-4832-86de-769bf7ab4d281"
#SILICON_SDK_TOKEN = "sk-2fgaqzbeiljqofpedgjdvbfbnqltplgbkprmjrmaccaygjaakt"
#NOKIA_SDK_TOKEN = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNmNTFmOWM0LWNiMjktNGMyNi04NjhmLWMzNDU2MjE1OGVlNCJ9.8fb8v3vruhs-NtywEWfFzBanGTgxF8kpHbFg86BHS7c"
#OPENAI_SDK_TOKEN = "sk-a8heuJlDOeyAwZd65fRYl8x81sF3Jx5rSPIMsr8dFVwS7BmPu5"

[PROFILING]
enabled = True
report_sec = 1
